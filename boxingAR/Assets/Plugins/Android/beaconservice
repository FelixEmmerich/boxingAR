

import com.estimote.sdk.Beacon;
import com.estimote.sdk.BeaconManager;
import com.estimote.sdk.Region;

import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.os.RemoteException;
import android.util.Log;

import com.estimote.sdk.Utils;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;


public class beaconservice {

    private BeaconManager beaconManager;
    private Region welten;
    private Beacon[] BconArray;


    @Override
    protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        Context context = this;
        welten = new Region("Welten Region", null, null, null);
        beaconManager = new BeaconManager(getApplicationContext());



        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);

        beaconManager.setRangingListener(new BeaconManager.RangingListener(){
                                             @Override
                                             public void onBeaconsDiscovered(Region region, List<Beacon> list) {
                                                 BconArray = new Beacon[list.size()];
                                                 int j = 0;
                                                 for (Beacon beacon : list){
                                                     BconArray[j]=beacon;
                                                     j++;
                                                 }//insert found beacons on Array

                                             }//onBeaconsDiscovered
                                         }//RangingListener
        );//ranginglistener

       /** mView = buildView();
        mCardScroller = new CardScrollView(this);
        mCardScroller.setAdapter(new CardScrollAdapter() {
            @Override
            public int getCount() {
                return 1;
            }

            @Override
            public Object getItem(int position) {
                return mView;
            }


            @Override
            public View getView(int position, View convertView, ViewGroup parent) {
                return mView;
            }


            @Override
            public int getPosition(Object item) {
                if (mView.equals(item)) {
                    return 0;
                }
                return AdapterView.INVALID_POSITION;
            }
        });
        // TAP Listener
        mCardScroller.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {

                AudioManager am = (AudioManager) getSystemService(Context.AUDIO_SERVICE);
                am.playSoundEffect(Sounds.DISALLOWED);

            }
        });
        setContentView(mCardScroller);*/
    }//onCreate



    @Override
    protected void onResume() {
        super.onResume();
        //mCardScroller.activate();
        beaconManager.connect(new BeaconManager.ServiceReadyCallback() {
            @Override
            public void onServiceReady() {
                beaconManager.startRanging(welten);
            }
        });
    }//onResumer

    @Override
    protected void onPause() {
        beaconManager.stopRanging(welten);
        //mCardScroller.deactivate();
        super.onPause();
    }//onPause

/**
    private View buildView() {
        CardBuilder card = new CardBuilder(this, CardBuilder.Layout.TEXT_FIXED);
        card.setText("Hello World");
        card.setFootnote("#hackAR");
        return card.getView();
    }
*/
}//MainActivity